{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport L from \"leaflet\";\nimport { defineComponent, ref, onMounted } from \"vue\";\nimport \"leaflet/dist/leaflet.css\";\nimport { LMap, LTileLayer } from \"@vue-leaflet/vue-leaflet\";\nimport \"@geoman-io/leaflet-geoman-free\";\nimport \"@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css\";\nexport default defineComponent({\n  name: \"MapView\",\n  components: {\n    LMap,\n    LTileLayer\n  },\n  setup() {\n    const map = ref(null);\n    const mapObject = ref(null);\n    const mapReady = ref(false);\n    const drawnText = ref(\"\");\n    const drawnRectangles = ref([]);\n    const mapLayer = {\n      zoom: 12,\n      center: [47.703711705924626, -122.14209459757434],\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    };\n    const selectedTileLayer = ref({\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    });\n    const hookUpDraw = async () => {\n      mapObject.value = map.value.leafletObject;\n      mapReady.value = true;\n      mapObject.value.pm.setLang(\"en_gb\");\n      mapObject.value.pm.addControls({\n        position: \"topleft\",\n        drawMarker: false,\n        drawCircleMarker: false,\n        drawPolygon: false,\n        drawPolyline: false,\n        drawRectangle: true,\n        drawCircle: false,\n        drawText: false,\n        removalMode: true\n      });\n      mapObject.value.on(\"pm:create\", handleDrawingClick);\n      mapObject.value.on(\"pm:remove\", handleObjectRemoval);\n      loadDrawnRectangles();\n    };\n    item1: \"\";\n    item2: \"\";\n    const handleDrawingClick = e => {\n      const layer = e.layer;\n      if (layer instanceof L.Rectangle) {\n        const popupForm = '<label for=\"popupTitle\">Title:</label><br><input type=\"text\" id=\"popupTitle\" name=\"popupTitle\"><br>' + '<label for=\"popupDescription\">Description:</label><br><input type=\"text\" id=\"popupDescription\" name=\"popupDescription\"><br>';\n        layer.bindPopup(\"It's June\").openPopup();\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = popupForm;\n        var titleValue = tempDiv.querySelector('#popupTitle').value;\n        var descriptionValue = tempDiv.querySelector('#popupDescription').value;\n\n        // drawnText.value = prompt(\"Enter text:\"); \n        if (drawnText.value) {\n          layer.bindPopup(drawnText.value).openPopup();\n        }\n        drawnRectangles.value.push({\n          layer,\n          text: drawnText.value\n        });\n        saveDrawnRectangles();\n      }\n    };\n    const handleObjectRemoval = () => {\n      console.log(\"running through here\");\n      drawnRectangles.value = [];\n      saveDrawnRectangles();\n    };\n    const saveDrawnRectangles = () => {\n      const rectanglesData = drawnRectangles.value.map(({\n        layer,\n        text\n      }) => {\n        return {\n          type: \"Feature\",\n          properties: {\n            popupMessage: text || \"\"\n          },\n          geometry: layer.toGeoJSON()\n        };\n      });\n      localStorage.setItem(\"drawnRectangles\", JSON.stringify(rectanglesData));\n      console.log(\"test\" + rectanglesData.length);\n    };\n    const loadDrawnRectangles = () => {\n      const savedRectangles = localStorage.getItem(\"drawnRectangles\");\n      if (savedRectangles) {\n        const rectanglesData = JSON.parse(savedRectangles);\n        rectanglesData.forEach(rectangleData => {\n          const drawnRectangle = L.geoJSON(rectangleData.geometry);\n          if (rectangleData.properties && rectangleData.properties.popupMessage) {\n            drawnRectangle.bindPopup(rectangleData.properties.popupMessage);\n          }\n          drawnRectangle.addTo(mapObject.value);\n          drawnRectangles.value.push({\n            layer: drawnRectangle,\n            text: rectangleData.properties.popupMessage\n          });\n        });\n        console.log(\"test\" + loadDrawnRectangles);\n      }\n    };\n    onMounted(() => {\n      window.addEventListener(\"beforeunload\", saveDrawnRectangles);\n    });\n    return {\n      map,\n      mapReady,\n      mapLayer,\n      hookUpDraw,\n      selectedTileLayer,\n      drawnText\n    };\n  }\n});","map":{"version":3,"names":["L","defineComponent","ref","onMounted","LMap","LTileLayer","name","components","setup","map","mapObject","mapReady","drawnText","drawnRectangles","mapLayer","zoom","center","attribution","selectedTileLayer","url","hookUpDraw","value","leafletObject","pm","setLang","addControls","position","drawMarker","drawCircleMarker","drawPolygon","drawPolyline","drawRectangle","drawCircle","drawText","removalMode","on","handleDrawingClick","handleObjectRemoval","loadDrawnRectangles","item1","item2","e","layer","Rectangle","popupForm","bindPopup","openPopup","tempDiv","document","createElement","innerHTML","titleValue","querySelector","descriptionValue","push","text","saveDrawnRectangles","console","log","rectanglesData","type","properties","popupMessage","geometry","toGeoJSON","localStorage","setItem","JSON","stringify","length","savedRectangles","getItem","parse","forEach","rectangleData","drawnRectangle","geoJSON","addTo","window","addEventListener"],"sources":["/Users/juangonzalez/Documents/GitHub/vue-project-kiwi/Clinet/src/components/LeafLet.vue"],"sourcesContent":["<template>\r\n  <div class=\"map\">\r\n    <l-map style=\"width: 100%; height: 100%\" ref=\"map\" @ready=\"hookUpDraw\" :zoom=\"mapLayer.zoom\"\r\n      :center=\"mapLayer.center\">\r\n      <template v-if=\"mapReady\">\r\n        <l-tile-layer :url=\"selectedTileLayer.url\" :attribution=\"mapLayer.attribution\"></l-tile-layer>\r\n      </template>\r\n    </l-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from \"leaflet\";\r\nimport { defineComponent, ref, onMounted } from \"vue\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { LMap, LTileLayer } from \"@vue-leaflet/vue-leaflet\";\r\n\r\nimport \"@geoman-io/leaflet-geoman-free\";\r\nimport \"@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css\";\r\n\r\nexport default defineComponent({\r\n  name: \"MapView\",\r\n  components: {\r\n    LMap,\r\n    LTileLayer,\r\n  },\r\n  setup() {\r\n    const map = ref(null);\r\n    const mapObject = ref(null);\r\n    const mapReady = ref(false);\r\n    const drawnText = ref(\"\");\r\n    const drawnRectangles = ref([]);\r\n\r\n    const mapLayer = {\r\n      zoom: 12,\r\n      center: [47.703711705924626, -122.14209459757434],\r\n      attribution:\r\n        '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    };\r\n\r\n    const selectedTileLayer = ref({\r\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n    });\r\n\r\n    const hookUpDraw = async () => {\r\n      mapObject.value = map.value.leafletObject;\r\n      mapReady.value = true;\r\n      mapObject.value.pm.setLang(\"en_gb\");\r\n      mapObject.value.pm.addControls({\r\n        position: \"topleft\",\r\n        drawMarker: false,\r\n        drawCircleMarker: false,\r\n        drawPolygon: false,\r\n        drawPolyline: false,\r\n        drawRectangle: true,\r\n        drawCircle: false,\r\n        drawText: false,\r\n        removalMode: true,\r\n      });\r\n      mapObject.value.on(\"pm:create\", handleDrawingClick);\r\n      mapObject.value.on(\"pm:remove\", handleObjectRemoval);\r\n      loadDrawnRectangles();\r\n    };\r\n\r\n    item1: \"\";\r\n    item2: \"\";\r\n\r\n    \r\n\r\n\r\n\r\n    const handleDrawingClick = (e) => {\r\n      const layer = e.layer;\r\n      if (layer instanceof L.Rectangle) {\r\n        const popupForm =\r\n      '<label for=\"popupTitle\">Title:</label><br><input type=\"text\" id=\"popupTitle\" name=\"popupTitle\"><br>' +\r\n      '<label for=\"popupDescription\">Description:</label><br><input type=\"text\" id=\"popupDescription\" name=\"popupDescription\"><br>';\r\n\r\n        layer.bindPopup(\"It's June\").openPopup();\r\n\r\n\r\n\r\n        var tempDiv = document.createElement('div');\r\n        tempDiv.innerHTML = popupForm;\r\n\r\n        var titleValue = tempDiv.querySelector('#popupTitle').value;\r\n        var descriptionValue = tempDiv.querySelector('#popupDescription').value;\r\n\r\n\r\n        // drawnText.value = prompt(\"Enter text:\"); \r\n        if (drawnText.value) {\r\n          layer.bindPopup(drawnText.value).openPopup();\r\n        }\r\n        drawnRectangles.value.push({ layer, text: drawnText.value });\r\n        saveDrawnRectangles();\r\n      }\r\n    };\r\n\r\n    const handleObjectRemoval = () => {\r\n      console.log(\"running through here\");\r\n      drawnRectangles.value = [];\r\n      saveDrawnRectangles(); \r\n    };\r\n\r\n\r\n    const saveDrawnRectangles = () => {\r\n      const rectanglesData = drawnRectangles.value.map(({ layer, text }) => {\r\n        return {\r\n          type: \"Feature\",\r\n          properties: {\r\n            popupMessage: text || \"\" \r\n          },\r\n          geometry: layer.toGeoJSON()\r\n        };\r\n      });\r\n      localStorage.setItem(\"drawnRectangles\", JSON.stringify(rectanglesData));\r\n      console.log(\"test\" + rectanglesData.length);\r\n\r\n    };\r\n\r\n    const loadDrawnRectangles = () => {\r\n      const savedRectangles = localStorage.getItem(\"drawnRectangles\");\r\n      if (savedRectangles) {\r\n        const rectanglesData = JSON.parse(savedRectangles);\r\n        rectanglesData.forEach(rectangleData => {\r\n          const drawnRectangle = L.geoJSON(rectangleData.geometry);\r\n          if (rectangleData.properties && rectangleData.properties.popupMessage) {\r\n            drawnRectangle.bindPopup(rectangleData.properties.popupMessage);\r\n          }\r\n          drawnRectangle.addTo(mapObject.value); \r\n          drawnRectangles.value.push({ layer: drawnRectangle, text: rectangleData.properties.popupMessage });\r\n        });\r\n\r\n        console.log(\"test\" + loadDrawnRectangles);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      window.addEventListener(\"beforeunload\", saveDrawnRectangles);\r\n    });\r\n\r\n    return {\r\n      map,\r\n      mapReady,\r\n      mapLayer,\r\n      hookUpDraw,\r\n      selectedTileLayer,\r\n      drawnText\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n.map {\r\n  height: 100vh;\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}