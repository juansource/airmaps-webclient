{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_l_tile_layer = _resolveComponent(\"l-tile-layer\");\n  const _component_l_map = _resolveComponent(\"l-map\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_l_map, {\n    style: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    },\n    ref: \"map\",\n    onReady: _ctx.hookUpDraw,\n    zoom: _ctx.mapLayer.zoom,\n    center: _ctx.mapLayer.center\n  }, {\n    default: _withCtx(() => [_ctx.mapReady ? (_openBlock(), _createBlock(_component_l_tile_layer, {\n      key: 0,\n      url: _ctx.selectedTileLayer.url,\n      attribution: _ctx.mapLayer.attribution\n    }, null, 8 /* PROPS */, [\"url\", \"attribution\"])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onReady\", \"zoom\", \"center\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_l_map","style","ref","onReady","_ctx","hookUpDraw","zoom","mapLayer","center","default","_withCtx","mapReady","_createBlock","_component_l_tile_layer","key","url","selectedTileLayer","attribution","_createCommentVNode","_"],"sources":["/Users/juangonzalez/Documents/GitHub/vue-project-kiwi/Clinet/src/components/LeafLet.vue"],"sourcesContent":["<template>\r\n  <div class=\"map\">\r\n    <l-map style=\"width: 100%; height: 100%\" ref=\"map\" @ready=\"hookUpDraw\" :zoom=\"mapLayer.zoom\"\r\n      :center=\"mapLayer.center\">\r\n      <template v-if=\"mapReady\">\r\n        <l-tile-layer :url=\"selectedTileLayer.url\" :attribution=\"mapLayer.attribution\"></l-tile-layer>\r\n      </template>\r\n    </l-map>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport \"leaflet\"; // leaflet components\r\nimport { defineComponent, ref } from \"vue\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { LMap, LTileLayer } from \"@vue-leaflet/vue-leaflet\";\r\n\r\nimport \"@geoman-io/leaflet-geoman-free\"; // leaflet-geoman components\r\nimport \"@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css\";\r\n\r\nimport IconField from 'primevue/iconfield'; // component library\r\n// import InputIcon from 'primevue/inputicon';\r\n\r\nexport default defineComponent({\r\n  name: \"MapView\",\r\n  components: {\r\n    LMap,\r\n    LTileLayer,\r\n  },\r\n  setup() {\r\n    const map = ref(null);\r\n    const mapObject = ref(null);\r\n    const mapReady = ref(false);\r\n    const drawnText = ref(\"\");\r\n\r\n    const mapLayer = {\r\n      zoom: 12,\r\n      center: [47.703711705924626, -122.14209459757434],\r\n      attribution:\r\n        '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n    };\r\n\r\n    const selectedTileLayer = ref({\r\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n    });\r\n\r\n    const hookUpDraw = async () => {\r\n      mapObject.value = map.value.leafletObject;\r\n      mapReady.value = true;\r\n      mapObject.value.pm.setLang(\"en_gb\");\r\n      mapObject.value.pm.addControls({\r\n        position: \"topleft\",\r\n        drawCircle: true,\r\n        drawText: false,\r\n      });\r\n      mapObject.value.on(\"pm:create\", handleDrawingClick);\r\n    };\r\n\r\n    const handleDrawingClick = (e) => {\r\n      // const layer = e.layer;\r\n      // drawnText.value = prompt(\"Enter text:\"); // Prompt user to enter text\r\n      // if (drawnText.value) {\r\n      //   layer.bindPopup(drawnText.value).openPopup();\r\n      // }\r\n\r\n      const layer = e.layer;\r\n      layer.setContent(\r\n        \r\n      );\r\n      // layer.bindPopup().\r\n\r\n\r\n    };  \r\n\r\n    return {\r\n      map,\r\n      mapReady,\r\n      mapLayer,\r\n      hookUpDraw,\r\n      selectedTileLayer,\r\n      drawnText\r\n    };\r\n  },\r\n});\r\n</script>\r\n\r\n<style>\r\n.map {\r\n  height: 100vh;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;;;uBAAhBC,mBAAA,CAOM,OAPNC,UAOM,GANJC,YAAA,CAKQC,gBAAA;IALDC,KAAiC,EAAjC;MAAA;MAAA;IAAA,CAAiC;IAACC,GAAG,EAAC,KAAK;IAAEC,OAAK,EAAEC,IAAA,CAAAC,UAAU;IAAGC,IAAI,EAAEF,IAAA,CAAAG,QAAQ,CAACD,IAAI;IACxFE,MAAM,EAAEJ,IAAA,CAAAG,QAAQ,CAACC;;IAHxBC,OAAA,EAAAC,QAAA,CAIM,MAEW,CAFKN,IAAA,CAAAO,QAAQ,I,cACtBC,YAAA,CAA8FC,uBAAA;MALtGC,GAAA;MAKuBC,GAAG,EAAEX,IAAA,CAAAY,iBAAiB,CAACD,GAAG;MAAGE,WAAW,EAAEb,IAAA,CAAAG,QAAQ,CAACU;uDAL1EC,mBAAA,e;IAAAC,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}