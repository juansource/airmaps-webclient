{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"img\", {\n  id: \"plan\",\n  src: \"http://localhost:3000/LifeGameMainArt.png\",\n  style: {\n    \"width\": \"100%\",\n    \"max-width\": \"1024px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [..._hoisted_2]);\n}","map":{"version":3,"names":["_createElementVNode","id","src","style","_hoisted_1","_createElementBlock","_hoisted_2"],"sources":["/Users/juangonzalez/Documents/GitHub/vue-project-kiwi/Clinet/src/components/AnnotationImages.vue"],"sourcesContent":["<template>\n    <div>\n        <img id=\"plan\" src=\"http://localhost:3000/LifeGameMainArt.png\" style=\"width: 100%; max-width: 1024px;\" />\n    </div>\n</template>\n\n<script>\n    import { Annotorious } from '@recogito/annotorious';\n    import '@recogito/annotorious/dist/annotorious.min.css';\n\n    export default {\n\n        data() {\n            return {\n                anno: null\n            }\n        },\n\n        methods: {\n            initAnno() {\n                this.anno = new Annotorious({\n                    image: document.getElementById(\"plan\")\n                });\n\n                this.anno.loadAnnotations('http://localhost:3000/testAnnotations.json');\n\n                this.anno.on('createAnnotation', function (annotation) {\n                    console.log('Created annotation', annotation);\n\n                    var data = JSON.stringify(annotation);\n                    console.log(data);\n                    const requestOptions = {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: data\n                    };\n                    fetch(\"http://localhost:3000/testAnnotationsAdd\", requestOptions)\n                        .then(response => response.json())\n                        .then(data => (this.postId = data.id));\n                });\n\n                this.anno.on('createSelection', function (selection) {\n                    console.log('Created selection', selection);\n                });\n\n                this.anno.on('deleteAnnotation', function (annotation) {\n                    console.log('Delete annotation', annotation);\n\n                    var data = JSON.stringify(annotation);\n                    console.log(data);\n                    const requestOptions = {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        body: data\n                    };\n                    fetch(\"http://localhost:3000/testAnnotationsDelete\", requestOptions)\n                        .then(response => response.json())\n                        .then(data => (this.postId = data.id));\n                });\n\n                this.anno.on('mouseEnterAnnotation', function (annotation, element) {\n                    console.log('Mouse ENTERED annotation', annotation, element);\n                });\n\n                this.anno.on('selectAnnotation', function (annotation, element) {\n                    console.log('Select annotation', annotation, element);\n                });\n\n                this.anno.on('cancelSelected', function (selection) {\n                    console.log('UNSELECTED', selection);\n                });\n\n                this.anno.on('clickAnnotation', function (annotation, element) {\n                    console.log('Clicked annotation', annotation, element);\n                });\n            }\n\n        },\n\n        mounted() {\n            this.initAnno();\n        }\n    }\n</script>"],"mappings":";gCAEQA,mBAAA,CAAyG;EAApGC,EAAE,EAAC,MAAM;EAACC,GAAG,EAAC,2CAA2C;EAACC,KAAuC,EAAvC;IAAA;IAAA;EAAA;;oBAA/DC,UAAyG,C;;uBAD7GC,mBAAA,CAEM,aAHV,IAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}