{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.regexp.flags.js\";\nconst t = 0,\n  e = 1,\n  n = 2,\n  i = 3,\n  s = 0,\n  a = 0,\n  r = 2,\n  o = 0,\n  l = 1,\n  f = 160,\n  U = 161,\n  c = 162,\n  h = 163,\n  _ = 0,\n  p = 1,\n  g = 0,\n  y = 1,\n  x = 2,\n  u = 3,\n  b = 4,\n  d = 5,\n  m = 6,\n  w = 7,\n  D = 8,\n  B = 9,\n  L = 10,\n  A = 11,\n  k = 12,\n  v = 13,\n  S = 14,\n  I = 15,\n  O = 16,\n  T = 17,\n  V = 18,\n  E = 0,\n  F = 1,\n  P = 2,\n  C = 3,\n  z = 4,\n  M = 5,\n  W = 6,\n  N = 7,\n  H = 8,\n  K = 9,\n  X = 10,\n  j = 11,\n  R = 0,\n  Y = 1,\n  q = 2,\n  G = 13,\n  J = 14,\n  Q = 15,\n  Z = 128,\n  $ = 64,\n  tt = 32,\n  et = 16,\n  nt = 0,\n  it = 1,\n  st = 2,\n  at = 3,\n  rt = 4,\n  ot = 5,\n  lt = 6,\n  ft = 7,\n  Ut = 8,\n  ct = 9,\n  ht = 10,\n  _t = 13,\n  pt = 14,\n  gt = 15,\n  yt = 16,\n  xt = 17,\n  ut = 20,\n  bt = 21,\n  dt = 22,\n  mt = 23,\n  wt = 24,\n  Dt = 27,\n  Bt = 28,\n  Lt = 29,\n  At = 30,\n  kt = 31,\n  vt = 34,\n  St = 35,\n  It = 36,\n  Ot = 37,\n  Tt = 38,\n  Vt = 41,\n  Et = 42,\n  Ft = 43,\n  Pt = 44,\n  Ct = 45,\n  zt = 48,\n  Mt = 49,\n  Wt = 50,\n  Nt = 58,\n  Ht = 59,\n  Kt = 62,\n  Xt = 63,\n  jt = 64,\n  Rt = 65,\n  Yt = 68,\n  qt = 69,\n  Gt = 70,\n  Jt = 71,\n  Qt = 74,\n  Zt = 75,\n  $t = 76,\n  te = 77,\n  ee = 78,\n  ne = 81,\n  ie = 82,\n  se = 83,\n  ae = 84,\n  re = 85,\n  oe = 88,\n  le = 89,\n  fe = 90,\n  Ue = 91,\n  ce = 92,\n  he = 95,\n  _e = 96,\n  pe = 97,\n  ge = 98,\n  ye = 99,\n  xe = 100,\n  ue = 101,\n  be = 102,\n  de = 103,\n  me = 104,\n  we = 105,\n  De = 106,\n  Be = 107,\n  Le = 108,\n  Ae = 109,\n  ke = 110,\n  ve = 111,\n  Se = 112,\n  Ie = 113,\n  Oe = 114,\n  Te = 115,\n  Ve = 116,\n  Ee = 117,\n  Fe = 118,\n  Pe = 119,\n  Ce = 120,\n  ze = 121,\n  Me = 122,\n  We = 123,\n  Ne = 124,\n  He = 125,\n  Ke = 126,\n  Xe = 127,\n  je = 128,\n  Re = 129,\n  Ye = 130,\n  qe = 131,\n  Ge = 132,\n  Je = 133,\n  Qe = 134,\n  Ze = 135,\n  $e = 136,\n  tn = 137,\n  en = 138,\n  nn = 139,\n  sn = 140,\n  an = 141,\n  rn = 142,\n  on = 143,\n  ln = 144,\n  fn = 145,\n  Un = 146,\n  cn = 147,\n  hn = 148,\n  _n = 149,\n  pn = 150,\n  gn = 151,\n  yn = 152,\n  xn = 153,\n  un = 154,\n  bn = 155,\n  dn = 156,\n  mn = 157,\n  wn = 158,\n  Dn = 159,\n  Bn = 160,\n  Ln = 161,\n  An = 162,\n  kn = 163,\n  vn = 164,\n  Sn = 165,\n  In = 166,\n  On = 167,\n  Tn = 168,\n  Vn = 169,\n  En = 170,\n  Fn = 171,\n  Pn = 172,\n  Cn = 173,\n  zn = 174,\n  Mn = 175,\n  Wn = 176,\n  Nn = 177,\n  Hn = 178,\n  Kn = 179,\n  Xn = 180,\n  jn = 181,\n  Rn = 182,\n  Yn = 183,\n  qn = 184,\n  Gn = 1000156007,\n  Jn = 1000156008,\n  Qn = 1000156009,\n  Zn = 1000156010,\n  $n = 1000156011,\n  ti = 1000156017,\n  ei = 1000156018,\n  ni = 1000156019,\n  ii = 1000156020,\n  si = 1000156021,\n  ai = 1000054e3,\n  ri = 1000054001,\n  oi = 1000054002,\n  li = 1000054003,\n  fi = 1000054004,\n  Ui = 1000054005,\n  ci = 1000054006,\n  hi = 1000054007,\n  _i = 1000066e3,\n  pi = 1000066001,\n  gi = 1000066002,\n  yi = 1000066003,\n  xi = 1000066004,\n  ui = 1000066005,\n  bi = 1000066006,\n  di = 1000066007,\n  mi = 1000066008,\n  wi = 1000066009,\n  Di = 1000066010,\n  Bi = 1000066011,\n  Li = 1000066012,\n  Ai = 1000066013,\n  ki = 100034e4,\n  vi = 1000340001;\nclass Si {\n  constructor() {\n    this.vkFormat = 0, this.typeSize = 1, this.pixelWidth = 0, this.pixelHeight = 0, this.pixelDepth = 0, this.layerCount = 0, this.faceCount = 1, this.supercompressionScheme = 0, this.levels = [], this.dataFormatDescriptor = [{\n      vendorId: 0,\n      descriptorType: 0,\n      descriptorBlockSize: 0,\n      versionNumber: 2,\n      colorModel: 0,\n      colorPrimaries: 1,\n      transferFunction: 2,\n      flags: 0,\n      texelBlockDimension: [0, 0, 0, 0],\n      bytesPlane: [0, 0, 0, 0, 0, 0, 0, 0],\n      samples: []\n    }], this.keyValue = {}, this.globalData = null;\n  }\n}\nclass Ii {\n  constructor(t, e, n, i) {\n    this._dataView = new DataView(t.buffer, t.byteOffset + e, n), this._littleEndian = i, this._offset = 0;\n  }\n  _nextUint8() {\n    const t = this._dataView.getUint8(this._offset);\n    return this._offset += 1, t;\n  }\n  _nextUint16() {\n    const t = this._dataView.getUint16(this._offset, this._littleEndian);\n    return this._offset += 2, t;\n  }\n  _nextUint32() {\n    const t = this._dataView.getUint32(this._offset, this._littleEndian);\n    return this._offset += 4, t;\n  }\n  _nextUint64() {\n    const t = this._dataView.getUint32(this._offset, this._littleEndian) + 2 ** 32 * this._dataView.getUint32(this._offset + 4, this._littleEndian);\n    return this._offset += 8, t;\n  }\n  _nextInt32() {\n    const t = this._dataView.getInt32(this._offset, this._littleEndian);\n    return this._offset += 4, t;\n  }\n  _skip(t) {\n    return this._offset += t, this;\n  }\n  _scan(t, e = 0) {\n    const n = this._offset;\n    let i = 0;\n    for (; this._dataView.getUint8(this._offset) !== e && i < t;) i++, this._offset++;\n    return i < t && this._offset++, new Uint8Array(this._dataView.buffer, this._dataView.byteOffset + n, i);\n  }\n}\nconst Oi = new Uint8Array([0]),\n  Ti = [171, 75, 84, 88, 32, 50, 48, 187, 13, 10, 26, 10];\nfunction Vi(t) {\n  return \"undefined\" != typeof TextEncoder ? new TextEncoder().encode(t) : Buffer.from(t);\n}\nfunction Ei(t) {\n  return \"undefined\" != typeof TextDecoder ? new TextDecoder().decode(t) : Buffer.from(t).toString(\"utf8\");\n}\nfunction Fi(t) {\n  let e = 0;\n  for (const n of t) e += n.byteLength;\n  const n = new Uint8Array(e);\n  let i = 0;\n  for (const e of t) n.set(new Uint8Array(e), i), i += e.byteLength;\n  return n;\n}\nfunction Pi(t) {\n  const e = new Uint8Array(t.buffer, t.byteOffset, Ti.length);\n  if (e[0] !== Ti[0] || e[1] !== Ti[1] || e[2] !== Ti[2] || e[3] !== Ti[3] || e[4] !== Ti[4] || e[5] !== Ti[5] || e[6] !== Ti[6] || e[7] !== Ti[7] || e[8] !== Ti[8] || e[9] !== Ti[9] || e[10] !== Ti[10] || e[11] !== Ti[11]) throw new Error(\"Missing KTX 2.0 identifier.\");\n  const n = new Si(),\n    i = 17 * Uint32Array.BYTES_PER_ELEMENT,\n    s = new Ii(t, Ti.length, i, !0);\n  n.vkFormat = s._nextUint32(), n.typeSize = s._nextUint32(), n.pixelWidth = s._nextUint32(), n.pixelHeight = s._nextUint32(), n.pixelDepth = s._nextUint32(), n.layerCount = s._nextUint32(), n.faceCount = s._nextUint32();\n  const a = s._nextUint32();\n  n.supercompressionScheme = s._nextUint32();\n  const r = s._nextUint32(),\n    o = s._nextUint32(),\n    l = s._nextUint32(),\n    f = s._nextUint32(),\n    U = s._nextUint64(),\n    c = s._nextUint64(),\n    h = new Ii(t, Ti.length + i, 3 * a * 8, !0);\n  for (let e = 0; e < a; e++) n.levels.push({\n    levelData: new Uint8Array(t.buffer, t.byteOffset + h._nextUint64(), h._nextUint64()),\n    uncompressedByteLength: h._nextUint64()\n  });\n  const _ = new Ii(t, r, o, !0),\n    p = {\n      vendorId: _._skip(4)._nextUint16(),\n      descriptorType: _._nextUint16(),\n      versionNumber: _._nextUint16(),\n      descriptorBlockSize: _._nextUint16(),\n      colorModel: _._nextUint8(),\n      colorPrimaries: _._nextUint8(),\n      transferFunction: _._nextUint8(),\n      flags: _._nextUint8(),\n      texelBlockDimension: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      bytesPlane: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      samples: []\n    },\n    g = (p.descriptorBlockSize / 4 - 6) / 4;\n  for (let t = 0; t < g; t++) {\n    const e = {\n      bitOffset: _._nextUint16(),\n      bitLength: _._nextUint8(),\n      channelType: _._nextUint8(),\n      samplePosition: [_._nextUint8(), _._nextUint8(), _._nextUint8(), _._nextUint8()],\n      sampleLower: -Infinity,\n      sampleUpper: Infinity\n    };\n    64 & e.channelType ? (e.sampleLower = _._nextInt32(), e.sampleUpper = _._nextInt32()) : (e.sampleLower = _._nextUint32(), e.sampleUpper = _._nextUint32()), p.samples[t] = e;\n  }\n  n.dataFormatDescriptor.length = 0, n.dataFormatDescriptor.push(p);\n  const y = new Ii(t, l, f, !0);\n  for (; y._offset < f;) {\n    const t = y._nextUint32(),\n      e = y._scan(t),\n      i = Ei(e),\n      s = y._scan(t - e.byteLength);\n    n.keyValue[i] = i.match(/^ktx/i) ? Ei(s) : s, y._offset % 4 && y._skip(4 - y._offset % 4);\n  }\n  if (c <= 0) return n;\n  const x = new Ii(t, U, c, !0),\n    u = x._nextUint16(),\n    b = x._nextUint16(),\n    d = x._nextUint32(),\n    m = x._nextUint32(),\n    w = x._nextUint32(),\n    D = x._nextUint32(),\n    B = [];\n  for (let t = 0; t < a; t++) B.push({\n    imageFlags: x._nextUint32(),\n    rgbSliceByteOffset: x._nextUint32(),\n    rgbSliceByteLength: x._nextUint32(),\n    alphaSliceByteOffset: x._nextUint32(),\n    alphaSliceByteLength: x._nextUint32()\n  });\n  const L = U + x._offset,\n    A = L + d,\n    k = A + m,\n    v = k + w,\n    S = new Uint8Array(t.buffer, t.byteOffset + L, d),\n    I = new Uint8Array(t.buffer, t.byteOffset + A, m),\n    O = new Uint8Array(t.buffer, t.byteOffset + k, w),\n    T = new Uint8Array(t.buffer, t.byteOffset + v, D);\n  return n.globalData = {\n    endpointCount: u,\n    selectorCount: b,\n    imageDescs: B,\n    endpointsData: S,\n    selectorsData: I,\n    tablesData: O,\n    extendedData: T\n  }, n;\n}\nfunction Ci() {\n  return (Ci = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var n = arguments[e];\n      for (var i in n) Object.prototype.hasOwnProperty.call(n, i) && (t[i] = n[i]);\n    }\n    return t;\n  }).apply(this, arguments);\n}\nconst zi = {\n  keepWriter: !1\n};\nfunction Mi(t, e = {}) {\n  e = Ci({}, zi, e);\n  let n = new ArrayBuffer(0);\n  if (t.globalData) {\n    const e = new ArrayBuffer(20 + 5 * t.globalData.imageDescs.length * 4),\n      i = new DataView(e);\n    i.setUint16(0, t.globalData.endpointCount, !0), i.setUint16(2, t.globalData.selectorCount, !0), i.setUint32(4, t.globalData.endpointsData.byteLength, !0), i.setUint32(8, t.globalData.selectorsData.byteLength, !0), i.setUint32(12, t.globalData.tablesData.byteLength, !0), i.setUint32(16, t.globalData.extendedData.byteLength, !0);\n    for (let e = 0; e < t.globalData.imageDescs.length; e++) {\n      const n = t.globalData.imageDescs[e];\n      i.setUint32(20 + 5 * e * 4 + 0, n.imageFlags, !0), i.setUint32(20 + 5 * e * 4 + 4, n.rgbSliceByteOffset, !0), i.setUint32(20 + 5 * e * 4 + 8, n.rgbSliceByteLength, !0), i.setUint32(20 + 5 * e * 4 + 12, n.alphaSliceByteOffset, !0), i.setUint32(20 + 5 * e * 4 + 16, n.alphaSliceByteLength, !0);\n    }\n    n = Fi([e, t.globalData.endpointsData, t.globalData.selectorsData, t.globalData.tablesData, t.globalData.extendedData]);\n  }\n  const i = [];\n  let s = t.keyValue;\n  e.keepWriter || (s = Ci({}, t.keyValue, {\n    KTXwriter: \"KTX-Parse v0.3.1\"\n  }));\n  for (const t in s) {\n    const e = s[t],\n      n = Vi(t),\n      a = \"string\" == typeof e ? Vi(e) : e,\n      r = n.byteLength + 1 + a.byteLength + 1,\n      o = r % 4 ? 4 - r % 4 : 0;\n    i.push(Fi([new Uint32Array([r]), n, Oi, a, Oi, new Uint8Array(o).fill(0)]));\n  }\n  const a = Fi(i);\n  if (1 !== t.dataFormatDescriptor.length || 0 !== t.dataFormatDescriptor[0].descriptorType) throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");\n  const r = t.dataFormatDescriptor[0],\n    o = new ArrayBuffer(28 + 16 * r.samples.length),\n    l = new DataView(o),\n    f = 24 + 16 * r.samples.length;\n  if (l.setUint32(0, o.byteLength, !0), l.setUint16(4, r.vendorId, !0), l.setUint16(6, r.descriptorType, !0), l.setUint16(8, r.versionNumber, !0), l.setUint16(10, f, !0), l.setUint8(12, r.colorModel), l.setUint8(13, r.colorPrimaries), l.setUint8(14, r.transferFunction), l.setUint8(15, r.flags), !Array.isArray(r.texelBlockDimension)) throw new Error(\"texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.\");\n  l.setUint8(16, r.texelBlockDimension[0]), l.setUint8(17, r.texelBlockDimension[1]), l.setUint8(18, r.texelBlockDimension[2]), l.setUint8(19, r.texelBlockDimension[3]);\n  for (let t = 0; t < 8; t++) l.setUint8(20 + t, r.bytesPlane[t]);\n  for (let t = 0; t < r.samples.length; t++) {\n    const e = r.samples[t],\n      n = 28 + 16 * t;\n    if (e.channelID) throw new Error(\"channelID has been renamed to channelType.\");\n    l.setUint16(n + 0, e.bitOffset, !0), l.setUint8(n + 2, e.bitLength), l.setUint8(n + 3, e.channelType), l.setUint8(n + 4, e.samplePosition[0]), l.setUint8(n + 5, e.samplePosition[1]), l.setUint8(n + 6, e.samplePosition[2]), l.setUint8(n + 7, e.samplePosition[3]), 64 & e.channelType ? (l.setInt32(n + 8, e.sampleLower, !0), l.setInt32(n + 12, e.sampleUpper, !0)) : (l.setUint32(n + 8, e.sampleLower, !0), l.setUint32(n + 12, e.sampleUpper, !0));\n  }\n  const U = Ti.length + 68 + 3 * t.levels.length * 8,\n    c = U + o.byteLength;\n  let h = n.byteLength > 0 ? c + a.byteLength : 0;\n  h % 8 && (h += 8 - h % 8);\n  const _ = [],\n    p = new DataView(new ArrayBuffer(3 * t.levels.length * 8));\n  let g = (h || c + a.byteLength) + n.byteLength;\n  for (let e = 0; e < t.levels.length; e++) {\n    const n = t.levels[e];\n    _.push(n.levelData), p.setBigUint64(24 * e + 0, BigInt(g), !0), p.setBigUint64(24 * e + 8, BigInt(n.levelData.byteLength), !0), p.setBigUint64(24 * e + 16, BigInt(n.uncompressedByteLength), !0), g += n.levelData.byteLength;\n  }\n  const y = new ArrayBuffer(68),\n    x = new DataView(y);\n  return x.setUint32(0, t.vkFormat, !0), x.setUint32(4, t.typeSize, !0), x.setUint32(8, t.pixelWidth, !0), x.setUint32(12, t.pixelHeight, !0), x.setUint32(16, t.pixelDepth, !0), x.setUint32(20, t.layerCount, !0), x.setUint32(24, t.faceCount, !0), x.setUint32(28, t.levels.length, !0), x.setUint32(32, t.supercompressionScheme, !0), x.setUint32(36, U, !0), x.setUint32(40, o.byteLength, !0), x.setUint32(44, c, !0), x.setUint32(48, a.byteLength, !0), x.setBigUint64(52, BigInt(n.byteLength > 0 ? h : 0), !0), x.setBigUint64(60, BigInt(n.byteLength), !0), new Uint8Array(Fi([new Uint8Array(Ti).buffer, y, p.buffer, o, a, h > 0 ? new ArrayBuffer(h - (c + a.byteLength)) : new ArrayBuffer(0), n, ..._]));\n}\nexport { Q as KHR_DF_CHANNEL_RGBSDA_ALPHA, q as KHR_DF_CHANNEL_RGBSDA_BLUE, J as KHR_DF_CHANNEL_RGBSDA_DEPTH, Y as KHR_DF_CHANNEL_RGBSDA_GREEN, R as KHR_DF_CHANNEL_RGBSDA_RED, G as KHR_DF_CHANNEL_RGBSDA_STENCIL, p as KHR_DF_FLAG_ALPHA_PREMULTIPLIED, _ as KHR_DF_FLAG_ALPHA_STRAIGHT, s as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT, c as KHR_DF_MODEL_ASTC, f as KHR_DF_MODEL_ETC1, h as KHR_DF_MODEL_ETC1S, U as KHR_DF_MODEL_ETC2, l as KHR_DF_MODEL_RGBSDA, o as KHR_DF_MODEL_UNSPECIFIED, W as KHR_DF_PRIMARIES_ACES, N as KHR_DF_PRIMARIES_ACESCC, j as KHR_DF_PRIMARIES_ADOBERGB, z as KHR_DF_PRIMARIES_BT2020, P as KHR_DF_PRIMARIES_BT601_EBU, C as KHR_DF_PRIMARIES_BT601_SMPTE, F as KHR_DF_PRIMARIES_BT709, M as KHR_DF_PRIMARIES_CIEXYZ, X as KHR_DF_PRIMARIES_DISPLAYP3, H as KHR_DF_PRIMARIES_NTSC1953, K as KHR_DF_PRIMARIES_PAL525, E as KHR_DF_PRIMARIES_UNSPECIFIED, tt as KHR_DF_SAMPLE_DATATYPE_EXPONENT, Z as KHR_DF_SAMPLE_DATATYPE_FLOAT, et as KHR_DF_SAMPLE_DATATYPE_LINEAR, $ as KHR_DF_SAMPLE_DATATYPE_SIGNED, O as KHR_DF_TRANSFER_ACESCC, T as KHR_DF_TRANSFER_ACESCCT, V as KHR_DF_TRANSFER_ADOBERGB, w as KHR_DF_TRANSFER_BT1886, k as KHR_DF_TRANSFER_DCIP3, B as KHR_DF_TRANSFER_HLG_EOTF, D as KHR_DF_TRANSFER_HLG_OETF, u as KHR_DF_TRANSFER_ITU, y as KHR_DF_TRANSFER_LINEAR, b as KHR_DF_TRANSFER_NTSC, S as KHR_DF_TRANSFER_PAL625_EOTF, v as KHR_DF_TRANSFER_PAL_OETF, L as KHR_DF_TRANSFER_PQ_EOTF, A as KHR_DF_TRANSFER_PQ_OETF, d as KHR_DF_TRANSFER_SLOG, m as KHR_DF_TRANSFER_SLOG2, x as KHR_DF_TRANSFER_SRGB, I as KHR_DF_TRANSFER_ST240, g as KHR_DF_TRANSFER_UNSPECIFIED, a as KHR_DF_VENDORID_KHRONOS, r as KHR_DF_VERSION, e as KHR_SUPERCOMPRESSION_BASISLZ, t as KHR_SUPERCOMPRESSION_NONE, i as KHR_SUPERCOMPRESSION_ZLIB, n as KHR_SUPERCOMPRESSION_ZSTD, Si as KTX2Container, Ut as VK_FORMAT_A1R5G5B5_UNORM_PACK16, qt as VK_FORMAT_A2B10G10R10_SINT_PACK32, Rt as VK_FORMAT_A2B10G10R10_SNORM_PACK32, Yt as VK_FORMAT_A2B10G10R10_UINT_PACK32, jt as VK_FORMAT_A2B10G10R10_UNORM_PACK32, Xt as VK_FORMAT_A2R10G10B10_SINT_PACK32, Ht as VK_FORMAT_A2R10G10B10_SNORM_PACK32, Kt as VK_FORMAT_A2R10G10B10_UINT_PACK32, Nt as VK_FORMAT_A2R10G10B10_UNORM_PACK32, vi as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT, ki as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT, Bi as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT, Xn as VK_FORMAT_ASTC_10x10_SRGB_BLOCK, Kn as VK_FORMAT_ASTC_10x10_UNORM_BLOCK, mi as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT, zn as VK_FORMAT_ASTC_10x5_SRGB_BLOCK, Cn as VK_FORMAT_ASTC_10x5_UNORM_BLOCK, wi as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT, Wn as VK_FORMAT_ASTC_10x6_SRGB_BLOCK, Mn as VK_FORMAT_ASTC_10x6_UNORM_BLOCK, Di as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT, Hn as VK_FORMAT_ASTC_10x8_SRGB_BLOCK, Nn as VK_FORMAT_ASTC_10x8_UNORM_BLOCK, Li as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT, Rn as VK_FORMAT_ASTC_12x10_SRGB_BLOCK, jn as VK_FORMAT_ASTC_12x10_UNORM_BLOCK, Ai as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT, qn as VK_FORMAT_ASTC_12x12_SRGB_BLOCK, Yn as VK_FORMAT_ASTC_12x12_UNORM_BLOCK, _i as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT, wn as VK_FORMAT_ASTC_4x4_SRGB_BLOCK, mn as VK_FORMAT_ASTC_4x4_UNORM_BLOCK, pi as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT, Bn as VK_FORMAT_ASTC_5x4_SRGB_BLOCK, Dn as VK_FORMAT_ASTC_5x4_UNORM_BLOCK, gi as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT, An as VK_FORMAT_ASTC_5x5_SRGB_BLOCK, Ln as VK_FORMAT_ASTC_5x5_UNORM_BLOCK, yi as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT, vn as VK_FORMAT_ASTC_6x5_SRGB_BLOCK, kn as VK_FORMAT_ASTC_6x5_UNORM_BLOCK, xi as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT, In as VK_FORMAT_ASTC_6x6_SRGB_BLOCK, Sn as VK_FORMAT_ASTC_6x6_UNORM_BLOCK, ui as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT, Tn as VK_FORMAT_ASTC_8x5_SRGB_BLOCK, On as VK_FORMAT_ASTC_8x5_UNORM_BLOCK, bi as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT, En as VK_FORMAT_ASTC_8x6_SRGB_BLOCK, Vn as VK_FORMAT_ASTC_8x6_UNORM_BLOCK, di as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT, Pn as VK_FORMAT_ASTC_8x8_SRGB_BLOCK, Fn as VK_FORMAT_ASTC_8x8_UNORM_BLOCK, Me as VK_FORMAT_B10G11R11_UFLOAT_PACK32, $n as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16, si as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16, at as VK_FORMAT_B4G4R4A4_UNORM_PACK16, ft as VK_FORMAT_B5G5R5A1_UNORM_PACK16, ot as VK_FORMAT_B5G6R5_UNORM_PACK16, Mt as VK_FORMAT_B8G8R8A8_SINT, Ct as VK_FORMAT_B8G8R8A8_SNORM, Wt as VK_FORMAT_B8G8R8A8_SRGB, zt as VK_FORMAT_B8G8R8A8_UINT, Pt as VK_FORMAT_B8G8R8A8_UNORM, St as VK_FORMAT_B8G8R8_SINT, kt as VK_FORMAT_B8G8R8_SNORM, It as VK_FORMAT_B8G8R8_SRGB, vt as VK_FORMAT_B8G8R8_UINT, At as VK_FORMAT_B8G8R8_UNORM, Qe as VK_FORMAT_BC1_RGBA_SRGB_BLOCK, Je as VK_FORMAT_BC1_RGBA_UNORM_BLOCK, Ge as VK_FORMAT_BC1_RGB_SRGB_BLOCK, qe as VK_FORMAT_BC1_RGB_UNORM_BLOCK, $e as VK_FORMAT_BC2_SRGB_BLOCK, Ze as VK_FORMAT_BC2_UNORM_BLOCK, en as VK_FORMAT_BC3_SRGB_BLOCK, tn as VK_FORMAT_BC3_UNORM_BLOCK, sn as VK_FORMAT_BC4_SNORM_BLOCK, nn as VK_FORMAT_BC4_UNORM_BLOCK, rn as VK_FORMAT_BC5_SNORM_BLOCK, an as VK_FORMAT_BC5_UNORM_BLOCK, ln as VK_FORMAT_BC6H_SFLOAT_BLOCK, on as VK_FORMAT_BC6H_UFLOAT_BLOCK, Un as VK_FORMAT_BC7_SRGB_BLOCK, fn as VK_FORMAT_BC7_UNORM_BLOCK, Ne as VK_FORMAT_D16_UNORM, je as VK_FORMAT_D16_UNORM_S8_UINT, Re as VK_FORMAT_D24_UNORM_S8_UINT, Ke as VK_FORMAT_D32_SFLOAT, Ye as VK_FORMAT_D32_SFLOAT_S8_UINT, We as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32, dn as VK_FORMAT_EAC_R11G11_SNORM_BLOCK, bn as VK_FORMAT_EAC_R11G11_UNORM_BLOCK, un as VK_FORMAT_EAC_R11_SNORM_BLOCK, xn as VK_FORMAT_EAC_R11_UNORM_BLOCK, pn as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK, _n as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK, yn as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK, gn as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK, hn as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK, cn as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK, Zn as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16, ii as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16, fi as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG, ai as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG, Ui as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG, ri as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG, ci as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG, oi as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG, hi as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG, li as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG, Qn as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16, Jn as VK_FORMAT_R10X6G10X6_UNORM_2PACK16, Gn as VK_FORMAT_R10X6_UNORM_PACK16, ni as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16, ei as VK_FORMAT_R12X4G12X4_UNORM_2PACK16, ti as VK_FORMAT_R12X4_UNORM_PACK16, pe as VK_FORMAT_R16G16B16A16_SFLOAT, _e as VK_FORMAT_R16G16B16A16_SINT, ce as VK_FORMAT_R16G16B16A16_SNORM, he as VK_FORMAT_R16G16B16A16_UINT, Ue as VK_FORMAT_R16G16B16A16_UNORM, fe as VK_FORMAT_R16G16B16_SFLOAT, le as VK_FORMAT_R16G16B16_SINT, re as VK_FORMAT_R16G16B16_SNORM, oe as VK_FORMAT_R16G16B16_UINT, ae as VK_FORMAT_R16G16B16_UNORM, se as VK_FORMAT_R16G16_SFLOAT, ie as VK_FORMAT_R16G16_SINT, ee as VK_FORMAT_R16G16_SNORM, ne as VK_FORMAT_R16G16_UINT, te as VK_FORMAT_R16G16_UNORM, $t as VK_FORMAT_R16_SFLOAT, Zt as VK_FORMAT_R16_SINT, Jt as VK_FORMAT_R16_SNORM, Qt as VK_FORMAT_R16_UINT, Gt as VK_FORMAT_R16_UNORM, Ae as VK_FORMAT_R32G32B32A32_SFLOAT, Le as VK_FORMAT_R32G32B32A32_SINT, Be as VK_FORMAT_R32G32B32A32_UINT, De as VK_FORMAT_R32G32B32_SFLOAT, we as VK_FORMAT_R32G32B32_SINT, me as VK_FORMAT_R32G32B32_UINT, de as VK_FORMAT_R32G32_SFLOAT, be as VK_FORMAT_R32G32_SINT, ue as VK_FORMAT_R32G32_UINT, xe as VK_FORMAT_R32_SFLOAT, ye as VK_FORMAT_R32_SINT, ge as VK_FORMAT_R32_UINT, st as VK_FORMAT_R4G4B4A4_UNORM_PACK16, it as VK_FORMAT_R4G4_UNORM_PACK8, lt as VK_FORMAT_R5G5B5A1_UNORM_PACK16, rt as VK_FORMAT_R5G6B5_UNORM_PACK16, ze as VK_FORMAT_R64G64B64A64_SFLOAT, Ce as VK_FORMAT_R64G64B64A64_SINT, Pe as VK_FORMAT_R64G64B64A64_UINT, Fe as VK_FORMAT_R64G64B64_SFLOAT, Ee as VK_FORMAT_R64G64B64_SINT, Ve as VK_FORMAT_R64G64B64_UINT, Te as VK_FORMAT_R64G64_SFLOAT, Oe as VK_FORMAT_R64G64_SINT, Ie as VK_FORMAT_R64G64_UINT, Se as VK_FORMAT_R64_SFLOAT, ve as VK_FORMAT_R64_SINT, ke as VK_FORMAT_R64_UINT, Et as VK_FORMAT_R8G8B8A8_SINT, Tt as VK_FORMAT_R8G8B8A8_SNORM, Ft as VK_FORMAT_R8G8B8A8_SRGB, Vt as VK_FORMAT_R8G8B8A8_UINT, Ot as VK_FORMAT_R8G8B8A8_UNORM, Bt as VK_FORMAT_R8G8B8_SINT, wt as VK_FORMAT_R8G8B8_SNORM, Lt as VK_FORMAT_R8G8B8_SRGB, Dt as VK_FORMAT_R8G8B8_UINT, mt as VK_FORMAT_R8G8B8_UNORM, bt as VK_FORMAT_R8G8_SINT, xt as VK_FORMAT_R8G8_SNORM, dt as VK_FORMAT_R8G8_SRGB, ut as VK_FORMAT_R8G8_UINT, yt as VK_FORMAT_R8G8_UNORM, pt as VK_FORMAT_R8_SINT, ht as VK_FORMAT_R8_SNORM, gt as VK_FORMAT_R8_SRGB, _t as VK_FORMAT_R8_UINT, ct as VK_FORMAT_R8_UNORM, Xe as VK_FORMAT_S8_UINT, nt as VK_FORMAT_UNDEFINED, He as VK_FORMAT_X8_D24_UNORM_PACK32, Pi as read, Mi as write };","map":{"version":3,"names":["t","e","n","i","s","a","r","o","l","f","U","c","h","_","p","g","y","x","u","b","d","m","w","D","B","L","A","k","v","S","I","O","T","V","E","F","P","C","z","M","W","N","H","K","X","j","R","Y","q","G","J","Q","Z","$","tt","et","nt","it","st","at","rt","ot","lt","ft","Ut","ct","ht","_t","pt","gt","yt","xt","ut","bt","dt","mt","wt","Dt","Bt","Lt","At","kt","vt","St","It","Ot","Tt","Vt","Et","Ft","Pt","Ct","zt","Mt","Wt","Nt","Ht","Kt","Xt","jt","Rt","Yt","qt","Gt","Jt","Qt","Zt","$t","te","ee","ne","ie","se","ae","re","oe","le","fe","Ue","ce","he","_e","pe","ge","ye","xe","ue","be","de","me","we","De","Be","Le","Ae","ke","ve","Se","Ie","Oe","Te","Ve","Ee","Fe","Pe","Ce","ze","Me","We","Ne","He","Ke","Xe","je","Re","Ye","qe","Ge","Je","Qe","Ze","$e","tn","en","nn","sn","an","rn","on","ln","fn","Un","cn","hn","_n","pn","gn","yn","xn","un","bn","dn","mn","wn","Dn","Bn","Ln","An","kn","vn","Sn","In","On","Tn","Vn","En","Fn","Pn","Cn","zn","Mn","Wn","Nn","Hn","Kn","Xn","jn","Rn","Yn","qn","Gn","Jn","Qn","Zn","$n","ti","ei","ni","ii","si","ai","ri","oi","li","fi","Ui","ci","hi","_i","pi","gi","yi","xi","ui","bi","di","mi","wi","Di","Bi","Li","Ai","ki","vi","Si","constructor","vkFormat","typeSize","pixelWidth","pixelHeight","pixelDepth","layerCount","faceCount","supercompressionScheme","levels","dataFormatDescriptor","vendorId","descriptorType","descriptorBlockSize","versionNumber","colorModel","colorPrimaries","transferFunction","flags","texelBlockDimension","bytesPlane","samples","keyValue","globalData","Ii","_dataView","DataView","buffer","byteOffset","_littleEndian","_offset","_nextUint8","getUint8","_nextUint16","getUint16","_nextUint32","getUint32","_nextUint64","_nextInt32","getInt32","_skip","_scan","Uint8Array","Oi","Ti","Vi","TextEncoder","encode","Buffer","from","Ei","TextDecoder","decode","toString","Fi","byteLength","set","Pi","length","Error","Uint32Array","BYTES_PER_ELEMENT","push","levelData","uncompressedByteLength","bitOffset","bitLength","channelType","samplePosition","sampleLower","Infinity","sampleUpper","match","imageFlags","rgbSliceByteOffset","rgbSliceByteLength","alphaSliceByteOffset","alphaSliceByteLength","endpointCount","selectorCount","imageDescs","endpointsData","selectorsData","tablesData","extendedData","Ci","Object","assign","arguments","prototype","hasOwnProperty","call","apply","zi","keepWriter","Mi","ArrayBuffer","setUint16","setUint32","KTXwriter","fill","setUint8","Array","isArray","channelID","setInt32","setBigUint64","BigInt","KHR_DF_CHANNEL_RGBSDA_ALPHA","KHR_DF_CHANNEL_RGBSDA_BLUE","KHR_DF_CHANNEL_RGBSDA_DEPTH","KHR_DF_CHANNEL_RGBSDA_GREEN","KHR_DF_CHANNEL_RGBSDA_RED","KHR_DF_CHANNEL_RGBSDA_STENCIL","KHR_DF_FLAG_ALPHA_PREMULTIPLIED","KHR_DF_FLAG_ALPHA_STRAIGHT","KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT","KHR_DF_MODEL_ASTC","KHR_DF_MODEL_ETC1","KHR_DF_MODEL_ETC1S","KHR_DF_MODEL_ETC2","KHR_DF_MODEL_RGBSDA","KHR_DF_MODEL_UNSPECIFIED","KHR_DF_PRIMARIES_ACES","KHR_DF_PRIMARIES_ACESCC","KHR_DF_PRIMARIES_ADOBERGB","KHR_DF_PRIMARIES_BT2020","KHR_DF_PRIMARIES_BT601_EBU","KHR_DF_PRIMARIES_BT601_SMPTE","KHR_DF_PRIMARIES_BT709","KHR_DF_PRIMARIES_CIEXYZ","KHR_DF_PRIMARIES_DISPLAYP3","KHR_DF_PRIMARIES_NTSC1953","KHR_DF_PRIMARIES_PAL525","KHR_DF_PRIMARIES_UNSPECIFIED","KHR_DF_SAMPLE_DATATYPE_EXPONENT","KHR_DF_SAMPLE_DATATYPE_FLOAT","KHR_DF_SAMPLE_DATATYPE_LINEAR","KHR_DF_SAMPLE_DATATYPE_SIGNED","KHR_DF_TRANSFER_ACESCC","KHR_DF_TRANSFER_ACESCCT","KHR_DF_TRANSFER_ADOBERGB","KHR_DF_TRANSFER_BT1886","KHR_DF_TRANSFER_DCIP3","KHR_DF_TRANSFER_HLG_EOTF","KHR_DF_TRANSFER_HLG_OETF","KHR_DF_TRANSFER_ITU","KHR_DF_TRANSFER_LINEAR","KHR_DF_TRANSFER_NTSC","KHR_DF_TRANSFER_PAL625_EOTF","KHR_DF_TRANSFER_PAL_OETF","KHR_DF_TRANSFER_PQ_EOTF","KHR_DF_TRANSFER_PQ_OETF","KHR_DF_TRANSFER_SLOG","KHR_DF_TRANSFER_SLOG2","KHR_DF_TRANSFER_SRGB","KHR_DF_TRANSFER_ST240","KHR_DF_TRANSFER_UNSPECIFIED","KHR_DF_VENDORID_KHRONOS","KHR_DF_VERSION","KHR_SUPERCOMPRESSION_BASISLZ","KHR_SUPERCOMPRESSION_NONE","KHR_SUPERCOMPRESSION_ZLIB","KHR_SUPERCOMPRESSION_ZSTD","KTX2Container","VK_FORMAT_A1R5G5B5_UNORM_PACK16","VK_FORMAT_A2B10G10R10_SINT_PACK32","VK_FORMAT_A2B10G10R10_SNORM_PACK32","VK_FORMAT_A2B10G10R10_UINT_PACK32","VK_FORMAT_A2B10G10R10_UNORM_PACK32","VK_FORMAT_A2R10G10B10_SINT_PACK32","VK_FORMAT_A2R10G10B10_SNORM_PACK32","VK_FORMAT_A2R10G10B10_UINT_PACK32","VK_FORMAT_A2R10G10B10_UNORM_PACK32","VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT","VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT","VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x10_SRGB_BLOCK","VK_FORMAT_ASTC_10x10_UNORM_BLOCK","VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x5_SRGB_BLOCK","VK_FORMAT_ASTC_10x5_UNORM_BLOCK","VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x6_SRGB_BLOCK","VK_FORMAT_ASTC_10x6_UNORM_BLOCK","VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_10x8_SRGB_BLOCK","VK_FORMAT_ASTC_10x8_UNORM_BLOCK","VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_12x10_SRGB_BLOCK","VK_FORMAT_ASTC_12x10_UNORM_BLOCK","VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_12x12_SRGB_BLOCK","VK_FORMAT_ASTC_12x12_UNORM_BLOCK","VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_4x4_SRGB_BLOCK","VK_FORMAT_ASTC_4x4_UNORM_BLOCK","VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_5x4_SRGB_BLOCK","VK_FORMAT_ASTC_5x4_UNORM_BLOCK","VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_5x5_SRGB_BLOCK","VK_FORMAT_ASTC_5x5_UNORM_BLOCK","VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_6x5_SRGB_BLOCK","VK_FORMAT_ASTC_6x5_UNORM_BLOCK","VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_6x6_SRGB_BLOCK","VK_FORMAT_ASTC_6x6_UNORM_BLOCK","VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x5_SRGB_BLOCK","VK_FORMAT_ASTC_8x5_UNORM_BLOCK","VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x6_SRGB_BLOCK","VK_FORMAT_ASTC_8x6_UNORM_BLOCK","VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT","VK_FORMAT_ASTC_8x8_SRGB_BLOCK","VK_FORMAT_ASTC_8x8_UNORM_BLOCK","VK_FORMAT_B10G11R11_UFLOAT_PACK32","VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16","VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16","VK_FORMAT_B4G4R4A4_UNORM_PACK16","VK_FORMAT_B5G5R5A1_UNORM_PACK16","VK_FORMAT_B5G6R5_UNORM_PACK16","VK_FORMAT_B8G8R8A8_SINT","VK_FORMAT_B8G8R8A8_SNORM","VK_FORMAT_B8G8R8A8_SRGB","VK_FORMAT_B8G8R8A8_UINT","VK_FORMAT_B8G8R8A8_UNORM","VK_FORMAT_B8G8R8_SINT","VK_FORMAT_B8G8R8_SNORM","VK_FORMAT_B8G8R8_SRGB","VK_FORMAT_B8G8R8_UINT","VK_FORMAT_B8G8R8_UNORM","VK_FORMAT_BC1_RGBA_SRGB_BLOCK","VK_FORMAT_BC1_RGBA_UNORM_BLOCK","VK_FORMAT_BC1_RGB_SRGB_BLOCK","VK_FORMAT_BC1_RGB_UNORM_BLOCK","VK_FORMAT_BC2_SRGB_BLOCK","VK_FORMAT_BC2_UNORM_BLOCK","VK_FORMAT_BC3_SRGB_BLOCK","VK_FORMAT_BC3_UNORM_BLOCK","VK_FORMAT_BC4_SNORM_BLOCK","VK_FORMAT_BC4_UNORM_BLOCK","VK_FORMAT_BC5_SNORM_BLOCK","VK_FORMAT_BC5_UNORM_BLOCK","VK_FORMAT_BC6H_SFLOAT_BLOCK","VK_FORMAT_BC6H_UFLOAT_BLOCK","VK_FORMAT_BC7_SRGB_BLOCK","VK_FORMAT_BC7_UNORM_BLOCK","VK_FORMAT_D16_UNORM","VK_FORMAT_D16_UNORM_S8_UINT","VK_FORMAT_D24_UNORM_S8_UINT","VK_FORMAT_D32_SFLOAT","VK_FORMAT_D32_SFLOAT_S8_UINT","VK_FORMAT_E5B9G9R9_UFLOAT_PACK32","VK_FORMAT_EAC_R11G11_SNORM_BLOCK","VK_FORMAT_EAC_R11G11_UNORM_BLOCK","VK_FORMAT_EAC_R11_SNORM_BLOCK","VK_FORMAT_EAC_R11_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK","VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK","VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK","VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16","VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16","VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG","VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG","VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG","VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16","VK_FORMAT_R10X6G10X6_UNORM_2PACK16","VK_FORMAT_R10X6_UNORM_PACK16","VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16","VK_FORMAT_R12X4G12X4_UNORM_2PACK16","VK_FORMAT_R12X4_UNORM_PACK16","VK_FORMAT_R16G16B16A16_SFLOAT","VK_FORMAT_R16G16B16A16_SINT","VK_FORMAT_R16G16B16A16_SNORM","VK_FORMAT_R16G16B16A16_UINT","VK_FORMAT_R16G16B16A16_UNORM","VK_FORMAT_R16G16B16_SFLOAT","VK_FORMAT_R16G16B16_SINT","VK_FORMAT_R16G16B16_SNORM","VK_FORMAT_R16G16B16_UINT","VK_FORMAT_R16G16B16_UNORM","VK_FORMAT_R16G16_SFLOAT","VK_FORMAT_R16G16_SINT","VK_FORMAT_R16G16_SNORM","VK_FORMAT_R16G16_UINT","VK_FORMAT_R16G16_UNORM","VK_FORMAT_R16_SFLOAT","VK_FORMAT_R16_SINT","VK_FORMAT_R16_SNORM","VK_FORMAT_R16_UINT","VK_FORMAT_R16_UNORM","VK_FORMAT_R32G32B32A32_SFLOAT","VK_FORMAT_R32G32B32A32_SINT","VK_FORMAT_R32G32B32A32_UINT","VK_FORMAT_R32G32B32_SFLOAT","VK_FORMAT_R32G32B32_SINT","VK_FORMAT_R32G32B32_UINT","VK_FORMAT_R32G32_SFLOAT","VK_FORMAT_R32G32_SINT","VK_FORMAT_R32G32_UINT","VK_FORMAT_R32_SFLOAT","VK_FORMAT_R32_SINT","VK_FORMAT_R32_UINT","VK_FORMAT_R4G4B4A4_UNORM_PACK16","VK_FORMAT_R4G4_UNORM_PACK8","VK_FORMAT_R5G5B5A1_UNORM_PACK16","VK_FORMAT_R5G6B5_UNORM_PACK16","VK_FORMAT_R64G64B64A64_SFLOAT","VK_FORMAT_R64G64B64A64_SINT","VK_FORMAT_R64G64B64A64_UINT","VK_FORMAT_R64G64B64_SFLOAT","VK_FORMAT_R64G64B64_SINT","VK_FORMAT_R64G64B64_UINT","VK_FORMAT_R64G64_SFLOAT","VK_FORMAT_R64G64_SINT","VK_FORMAT_R64G64_UINT","VK_FORMAT_R64_SFLOAT","VK_FORMAT_R64_SINT","VK_FORMAT_R64_UINT","VK_FORMAT_R8G8B8A8_SINT","VK_FORMAT_R8G8B8A8_SNORM","VK_FORMAT_R8G8B8A8_SRGB","VK_FORMAT_R8G8B8A8_UINT","VK_FORMAT_R8G8B8A8_UNORM","VK_FORMAT_R8G8B8_SINT","VK_FORMAT_R8G8B8_SNORM","VK_FORMAT_R8G8B8_SRGB","VK_FORMAT_R8G8B8_UINT","VK_FORMAT_R8G8B8_UNORM","VK_FORMAT_R8G8_SINT","VK_FORMAT_R8G8_SNORM","VK_FORMAT_R8G8_SRGB","VK_FORMAT_R8G8_UINT","VK_FORMAT_R8G8_UNORM","VK_FORMAT_R8_SINT","VK_FORMAT_R8_SNORM","VK_FORMAT_R8_SRGB","VK_FORMAT_R8_UINT","VK_FORMAT_R8_UNORM","VK_FORMAT_S8_UINT","VK_FORMAT_UNDEFINED","VK_FORMAT_X8_D24_UNORM_PACK32","read","write"],"sources":["/Users/juangonzalez/Documents/GitHub/vue-project-kiwi/Clinet/node_modules/three/examples/jsm/libs/ktx-parse.module.js"],"sourcesContent":["const t=0,e=1,n=2,i=3,s=0,a=0,r=2,o=0,l=1,f=160,U=161,c=162,h=163,_=0,p=1,g=0,y=1,x=2,u=3,b=4,d=5,m=6,w=7,D=8,B=9,L=10,A=11,k=12,v=13,S=14,I=15,O=16,T=17,V=18,E=0,F=1,P=2,C=3,z=4,M=5,W=6,N=7,H=8,K=9,X=10,j=11,R=0,Y=1,q=2,G=13,J=14,Q=15,Z=128,$=64,tt=32,et=16,nt=0,it=1,st=2,at=3,rt=4,ot=5,lt=6,ft=7,Ut=8,ct=9,ht=10,_t=13,pt=14,gt=15,yt=16,xt=17,ut=20,bt=21,dt=22,mt=23,wt=24,Dt=27,Bt=28,Lt=29,At=30,kt=31,vt=34,St=35,It=36,Ot=37,Tt=38,Vt=41,Et=42,Ft=43,Pt=44,Ct=45,zt=48,Mt=49,Wt=50,Nt=58,Ht=59,Kt=62,Xt=63,jt=64,Rt=65,Yt=68,qt=69,Gt=70,Jt=71,Qt=74,Zt=75,$t=76,te=77,ee=78,ne=81,ie=82,se=83,ae=84,re=85,oe=88,le=89,fe=90,Ue=91,ce=92,he=95,_e=96,pe=97,ge=98,ye=99,xe=100,ue=101,be=102,de=103,me=104,we=105,De=106,Be=107,Le=108,Ae=109,ke=110,ve=111,Se=112,Ie=113,Oe=114,Te=115,Ve=116,Ee=117,Fe=118,Pe=119,Ce=120,ze=121,Me=122,We=123,Ne=124,He=125,Ke=126,Xe=127,je=128,Re=129,Ye=130,qe=131,Ge=132,Je=133,Qe=134,Ze=135,$e=136,tn=137,en=138,nn=139,sn=140,an=141,rn=142,on=143,ln=144,fn=145,Un=146,cn=147,hn=148,_n=149,pn=150,gn=151,yn=152,xn=153,un=154,bn=155,dn=156,mn=157,wn=158,Dn=159,Bn=160,Ln=161,An=162,kn=163,vn=164,Sn=165,In=166,On=167,Tn=168,Vn=169,En=170,Fn=171,Pn=172,Cn=173,zn=174,Mn=175,Wn=176,Nn=177,Hn=178,Kn=179,Xn=180,jn=181,Rn=182,Yn=183,qn=184,Gn=1000156007,Jn=1000156008,Qn=1000156009,Zn=1000156010,$n=1000156011,ti=1000156017,ei=1000156018,ni=1000156019,ii=1000156020,si=1000156021,ai=1000054e3,ri=1000054001,oi=1000054002,li=1000054003,fi=1000054004,Ui=1000054005,ci=1000054006,hi=1000054007,_i=1000066e3,pi=1000066001,gi=1000066002,yi=1000066003,xi=1000066004,ui=1000066005,bi=1000066006,di=1000066007,mi=1000066008,wi=1000066009,Di=1000066010,Bi=1000066011,Li=1000066012,Ai=1000066013,ki=100034e4,vi=1000340001;class Si{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}}class Ii{constructor(t,e,n,i){this._dataView=new DataView(t.buffer,t.byteOffset+e,n),this._littleEndian=i,this._offset=0}_nextUint8(){const t=this._dataView.getUint8(this._offset);return this._offset+=1,t}_nextUint16(){const t=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,t}_nextUint32(){const t=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,t}_nextUint64(){const t=this._dataView.getUint32(this._offset,this._littleEndian)+2**32*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,t}_nextInt32(){const t=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,t}_skip(t){return this._offset+=t,this}_scan(t,e=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==e&&i<t;)i++,this._offset++;return i<t&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}}const Oi=new Uint8Array([0]),Ti=[171,75,84,88,32,50,48,187,13,10,26,10];function Vi(t){return\"undefined\"!=typeof TextEncoder?(new TextEncoder).encode(t):Buffer.from(t)}function Ei(t){return\"undefined\"!=typeof TextDecoder?(new TextDecoder).decode(t):Buffer.from(t).toString(\"utf8\")}function Fi(t){let e=0;for(const n of t)e+=n.byteLength;const n=new Uint8Array(e);let i=0;for(const e of t)n.set(new Uint8Array(e),i),i+=e.byteLength;return n}function Pi(t){const e=new Uint8Array(t.buffer,t.byteOffset,Ti.length);if(e[0]!==Ti[0]||e[1]!==Ti[1]||e[2]!==Ti[2]||e[3]!==Ti[3]||e[4]!==Ti[4]||e[5]!==Ti[5]||e[6]!==Ti[6]||e[7]!==Ti[7]||e[8]!==Ti[8]||e[9]!==Ti[9]||e[10]!==Ti[10]||e[11]!==Ti[11])throw new Error(\"Missing KTX 2.0 identifier.\");const n=new Si,i=17*Uint32Array.BYTES_PER_ELEMENT,s=new Ii(t,Ti.length,i,!0);n.vkFormat=s._nextUint32(),n.typeSize=s._nextUint32(),n.pixelWidth=s._nextUint32(),n.pixelHeight=s._nextUint32(),n.pixelDepth=s._nextUint32(),n.layerCount=s._nextUint32(),n.faceCount=s._nextUint32();const a=s._nextUint32();n.supercompressionScheme=s._nextUint32();const r=s._nextUint32(),o=s._nextUint32(),l=s._nextUint32(),f=s._nextUint32(),U=s._nextUint64(),c=s._nextUint64(),h=new Ii(t,Ti.length+i,3*a*8,!0);for(let e=0;e<a;e++)n.levels.push({levelData:new Uint8Array(t.buffer,t.byteOffset+h._nextUint64(),h._nextUint64()),uncompressedByteLength:h._nextUint64()});const _=new Ii(t,r,o,!0),p={vendorId:_._skip(4)._nextUint16(),descriptorType:_._nextUint16(),versionNumber:_._nextUint16(),descriptorBlockSize:_._nextUint16(),colorModel:_._nextUint8(),colorPrimaries:_._nextUint8(),transferFunction:_._nextUint8(),flags:_._nextUint8(),texelBlockDimension:[_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8()],bytesPlane:[_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8()],samples:[]},g=(p.descriptorBlockSize/4-6)/4;for(let t=0;t<g;t++){const e={bitOffset:_._nextUint16(),bitLength:_._nextUint8(),channelType:_._nextUint8(),samplePosition:[_._nextUint8(),_._nextUint8(),_._nextUint8(),_._nextUint8()],sampleLower:-Infinity,sampleUpper:Infinity};64&e.channelType?(e.sampleLower=_._nextInt32(),e.sampleUpper=_._nextInt32()):(e.sampleLower=_._nextUint32(),e.sampleUpper=_._nextUint32()),p.samples[t]=e}n.dataFormatDescriptor.length=0,n.dataFormatDescriptor.push(p);const y=new Ii(t,l,f,!0);for(;y._offset<f;){const t=y._nextUint32(),e=y._scan(t),i=Ei(e),s=y._scan(t-e.byteLength);n.keyValue[i]=i.match(/^ktx/i)?Ei(s):s,y._offset%4&&y._skip(4-y._offset%4)}if(c<=0)return n;const x=new Ii(t,U,c,!0),u=x._nextUint16(),b=x._nextUint16(),d=x._nextUint32(),m=x._nextUint32(),w=x._nextUint32(),D=x._nextUint32(),B=[];for(let t=0;t<a;t++)B.push({imageFlags:x._nextUint32(),rgbSliceByteOffset:x._nextUint32(),rgbSliceByteLength:x._nextUint32(),alphaSliceByteOffset:x._nextUint32(),alphaSliceByteLength:x._nextUint32()});const L=U+x._offset,A=L+d,k=A+m,v=k+w,S=new Uint8Array(t.buffer,t.byteOffset+L,d),I=new Uint8Array(t.buffer,t.byteOffset+A,m),O=new Uint8Array(t.buffer,t.byteOffset+k,w),T=new Uint8Array(t.buffer,t.byteOffset+v,D);return n.globalData={endpointCount:u,selectorCount:b,imageDescs:B,endpointsData:S,selectorsData:I,tablesData:O,extendedData:T},n}function Ci(){return(Ci=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}const zi={keepWriter:!1};function Mi(t,e={}){e=Ci({},zi,e);let n=new ArrayBuffer(0);if(t.globalData){const e=new ArrayBuffer(20+5*t.globalData.imageDescs.length*4),i=new DataView(e);i.setUint16(0,t.globalData.endpointCount,!0),i.setUint16(2,t.globalData.selectorCount,!0),i.setUint32(4,t.globalData.endpointsData.byteLength,!0),i.setUint32(8,t.globalData.selectorsData.byteLength,!0),i.setUint32(12,t.globalData.tablesData.byteLength,!0),i.setUint32(16,t.globalData.extendedData.byteLength,!0);for(let e=0;e<t.globalData.imageDescs.length;e++){const n=t.globalData.imageDescs[e];i.setUint32(20+5*e*4+0,n.imageFlags,!0),i.setUint32(20+5*e*4+4,n.rgbSliceByteOffset,!0),i.setUint32(20+5*e*4+8,n.rgbSliceByteLength,!0),i.setUint32(20+5*e*4+12,n.alphaSliceByteOffset,!0),i.setUint32(20+5*e*4+16,n.alphaSliceByteLength,!0)}n=Fi([e,t.globalData.endpointsData,t.globalData.selectorsData,t.globalData.tablesData,t.globalData.extendedData])}const i=[];let s=t.keyValue;e.keepWriter||(s=Ci({},t.keyValue,{KTXwriter:\"KTX-Parse v0.3.1\"}));for(const t in s){const e=s[t],n=Vi(t),a=\"string\"==typeof e?Vi(e):e,r=n.byteLength+1+a.byteLength+1,o=r%4?4-r%4:0;i.push(Fi([new Uint32Array([r]),n,Oi,a,Oi,new Uint8Array(o).fill(0)]))}const a=Fi(i);if(1!==t.dataFormatDescriptor.length||0!==t.dataFormatDescriptor[0].descriptorType)throw new Error(\"Only BASICFORMAT Data Format Descriptor output supported.\");const r=t.dataFormatDescriptor[0],o=new ArrayBuffer(28+16*r.samples.length),l=new DataView(o),f=24+16*r.samples.length;if(l.setUint32(0,o.byteLength,!0),l.setUint16(4,r.vendorId,!0),l.setUint16(6,r.descriptorType,!0),l.setUint16(8,r.versionNumber,!0),l.setUint16(10,f,!0),l.setUint8(12,r.colorModel),l.setUint8(13,r.colorPrimaries),l.setUint8(14,r.transferFunction),l.setUint8(15,r.flags),!Array.isArray(r.texelBlockDimension))throw new Error(\"texelBlockDimension is now an array. For dimensionality `d`, set `d - 1`.\");l.setUint8(16,r.texelBlockDimension[0]),l.setUint8(17,r.texelBlockDimension[1]),l.setUint8(18,r.texelBlockDimension[2]),l.setUint8(19,r.texelBlockDimension[3]);for(let t=0;t<8;t++)l.setUint8(20+t,r.bytesPlane[t]);for(let t=0;t<r.samples.length;t++){const e=r.samples[t],n=28+16*t;if(e.channelID)throw new Error(\"channelID has been renamed to channelType.\");l.setUint16(n+0,e.bitOffset,!0),l.setUint8(n+2,e.bitLength),l.setUint8(n+3,e.channelType),l.setUint8(n+4,e.samplePosition[0]),l.setUint8(n+5,e.samplePosition[1]),l.setUint8(n+6,e.samplePosition[2]),l.setUint8(n+7,e.samplePosition[3]),64&e.channelType?(l.setInt32(n+8,e.sampleLower,!0),l.setInt32(n+12,e.sampleUpper,!0)):(l.setUint32(n+8,e.sampleLower,!0),l.setUint32(n+12,e.sampleUpper,!0))}const U=Ti.length+68+3*t.levels.length*8,c=U+o.byteLength;let h=n.byteLength>0?c+a.byteLength:0;h%8&&(h+=8-h%8);const _=[],p=new DataView(new ArrayBuffer(3*t.levels.length*8));let g=(h||c+a.byteLength)+n.byteLength;for(let e=0;e<t.levels.length;e++){const n=t.levels[e];_.push(n.levelData),p.setBigUint64(24*e+0,BigInt(g),!0),p.setBigUint64(24*e+8,BigInt(n.levelData.byteLength),!0),p.setBigUint64(24*e+16,BigInt(n.uncompressedByteLength),!0),g+=n.levelData.byteLength}const y=new ArrayBuffer(68),x=new DataView(y);return x.setUint32(0,t.vkFormat,!0),x.setUint32(4,t.typeSize,!0),x.setUint32(8,t.pixelWidth,!0),x.setUint32(12,t.pixelHeight,!0),x.setUint32(16,t.pixelDepth,!0),x.setUint32(20,t.layerCount,!0),x.setUint32(24,t.faceCount,!0),x.setUint32(28,t.levels.length,!0),x.setUint32(32,t.supercompressionScheme,!0),x.setUint32(36,U,!0),x.setUint32(40,o.byteLength,!0),x.setUint32(44,c,!0),x.setUint32(48,a.byteLength,!0),x.setBigUint64(52,BigInt(n.byteLength>0?h:0),!0),x.setBigUint64(60,BigInt(n.byteLength),!0),new Uint8Array(Fi([new Uint8Array(Ti).buffer,y,p.buffer,o,a,h>0?new ArrayBuffer(h-(c+a.byteLength)):new ArrayBuffer(0),n,..._]))}export{Q as KHR_DF_CHANNEL_RGBSDA_ALPHA,q as KHR_DF_CHANNEL_RGBSDA_BLUE,J as KHR_DF_CHANNEL_RGBSDA_DEPTH,Y as KHR_DF_CHANNEL_RGBSDA_GREEN,R as KHR_DF_CHANNEL_RGBSDA_RED,G as KHR_DF_CHANNEL_RGBSDA_STENCIL,p as KHR_DF_FLAG_ALPHA_PREMULTIPLIED,_ as KHR_DF_FLAG_ALPHA_STRAIGHT,s as KHR_DF_KHR_DESCRIPTORTYPE_BASICFORMAT,c as KHR_DF_MODEL_ASTC,f as KHR_DF_MODEL_ETC1,h as KHR_DF_MODEL_ETC1S,U as KHR_DF_MODEL_ETC2,l as KHR_DF_MODEL_RGBSDA,o as KHR_DF_MODEL_UNSPECIFIED,W as KHR_DF_PRIMARIES_ACES,N as KHR_DF_PRIMARIES_ACESCC,j as KHR_DF_PRIMARIES_ADOBERGB,z as KHR_DF_PRIMARIES_BT2020,P as KHR_DF_PRIMARIES_BT601_EBU,C as KHR_DF_PRIMARIES_BT601_SMPTE,F as KHR_DF_PRIMARIES_BT709,M as KHR_DF_PRIMARIES_CIEXYZ,X as KHR_DF_PRIMARIES_DISPLAYP3,H as KHR_DF_PRIMARIES_NTSC1953,K as KHR_DF_PRIMARIES_PAL525,E as KHR_DF_PRIMARIES_UNSPECIFIED,tt as KHR_DF_SAMPLE_DATATYPE_EXPONENT,Z as KHR_DF_SAMPLE_DATATYPE_FLOAT,et as KHR_DF_SAMPLE_DATATYPE_LINEAR,$ as KHR_DF_SAMPLE_DATATYPE_SIGNED,O as KHR_DF_TRANSFER_ACESCC,T as KHR_DF_TRANSFER_ACESCCT,V as KHR_DF_TRANSFER_ADOBERGB,w as KHR_DF_TRANSFER_BT1886,k as KHR_DF_TRANSFER_DCIP3,B as KHR_DF_TRANSFER_HLG_EOTF,D as KHR_DF_TRANSFER_HLG_OETF,u as KHR_DF_TRANSFER_ITU,y as KHR_DF_TRANSFER_LINEAR,b as KHR_DF_TRANSFER_NTSC,S as KHR_DF_TRANSFER_PAL625_EOTF,v as KHR_DF_TRANSFER_PAL_OETF,L as KHR_DF_TRANSFER_PQ_EOTF,A as KHR_DF_TRANSFER_PQ_OETF,d as KHR_DF_TRANSFER_SLOG,m as KHR_DF_TRANSFER_SLOG2,x as KHR_DF_TRANSFER_SRGB,I as KHR_DF_TRANSFER_ST240,g as KHR_DF_TRANSFER_UNSPECIFIED,a as KHR_DF_VENDORID_KHRONOS,r as KHR_DF_VERSION,e as KHR_SUPERCOMPRESSION_BASISLZ,t as KHR_SUPERCOMPRESSION_NONE,i as KHR_SUPERCOMPRESSION_ZLIB,n as KHR_SUPERCOMPRESSION_ZSTD,Si as KTX2Container,Ut as VK_FORMAT_A1R5G5B5_UNORM_PACK16,qt as VK_FORMAT_A2B10G10R10_SINT_PACK32,Rt as VK_FORMAT_A2B10G10R10_SNORM_PACK32,Yt as VK_FORMAT_A2B10G10R10_UINT_PACK32,jt as VK_FORMAT_A2B10G10R10_UNORM_PACK32,Xt as VK_FORMAT_A2R10G10B10_SINT_PACK32,Ht as VK_FORMAT_A2R10G10B10_SNORM_PACK32,Kt as VK_FORMAT_A2R10G10B10_UINT_PACK32,Nt as VK_FORMAT_A2R10G10B10_UNORM_PACK32,vi as VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT,ki as VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT,Bi as VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT,Xn as VK_FORMAT_ASTC_10x10_SRGB_BLOCK,Kn as VK_FORMAT_ASTC_10x10_UNORM_BLOCK,mi as VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT,zn as VK_FORMAT_ASTC_10x5_SRGB_BLOCK,Cn as VK_FORMAT_ASTC_10x5_UNORM_BLOCK,wi as VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT,Wn as VK_FORMAT_ASTC_10x6_SRGB_BLOCK,Mn as VK_FORMAT_ASTC_10x6_UNORM_BLOCK,Di as VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT,Hn as VK_FORMAT_ASTC_10x8_SRGB_BLOCK,Nn as VK_FORMAT_ASTC_10x8_UNORM_BLOCK,Li as VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT,Rn as VK_FORMAT_ASTC_12x10_SRGB_BLOCK,jn as VK_FORMAT_ASTC_12x10_UNORM_BLOCK,Ai as VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT,qn as VK_FORMAT_ASTC_12x12_SRGB_BLOCK,Yn as VK_FORMAT_ASTC_12x12_UNORM_BLOCK,_i as VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT,wn as VK_FORMAT_ASTC_4x4_SRGB_BLOCK,mn as VK_FORMAT_ASTC_4x4_UNORM_BLOCK,pi as VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT,Bn as VK_FORMAT_ASTC_5x4_SRGB_BLOCK,Dn as VK_FORMAT_ASTC_5x4_UNORM_BLOCK,gi as VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT,An as VK_FORMAT_ASTC_5x5_SRGB_BLOCK,Ln as VK_FORMAT_ASTC_5x5_UNORM_BLOCK,yi as VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT,vn as VK_FORMAT_ASTC_6x5_SRGB_BLOCK,kn as VK_FORMAT_ASTC_6x5_UNORM_BLOCK,xi as VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT,In as VK_FORMAT_ASTC_6x6_SRGB_BLOCK,Sn as VK_FORMAT_ASTC_6x6_UNORM_BLOCK,ui as VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT,Tn as VK_FORMAT_ASTC_8x5_SRGB_BLOCK,On as VK_FORMAT_ASTC_8x5_UNORM_BLOCK,bi as VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT,En as VK_FORMAT_ASTC_8x6_SRGB_BLOCK,Vn as VK_FORMAT_ASTC_8x6_UNORM_BLOCK,di as VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT,Pn as VK_FORMAT_ASTC_8x8_SRGB_BLOCK,Fn as VK_FORMAT_ASTC_8x8_UNORM_BLOCK,Me as VK_FORMAT_B10G11R11_UFLOAT_PACK32,$n as VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16,si as VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16,at as VK_FORMAT_B4G4R4A4_UNORM_PACK16,ft as VK_FORMAT_B5G5R5A1_UNORM_PACK16,ot as VK_FORMAT_B5G6R5_UNORM_PACK16,Mt as VK_FORMAT_B8G8R8A8_SINT,Ct as VK_FORMAT_B8G8R8A8_SNORM,Wt as VK_FORMAT_B8G8R8A8_SRGB,zt as VK_FORMAT_B8G8R8A8_UINT,Pt as VK_FORMAT_B8G8R8A8_UNORM,St as VK_FORMAT_B8G8R8_SINT,kt as VK_FORMAT_B8G8R8_SNORM,It as VK_FORMAT_B8G8R8_SRGB,vt as VK_FORMAT_B8G8R8_UINT,At as VK_FORMAT_B8G8R8_UNORM,Qe as VK_FORMAT_BC1_RGBA_SRGB_BLOCK,Je as VK_FORMAT_BC1_RGBA_UNORM_BLOCK,Ge as VK_FORMAT_BC1_RGB_SRGB_BLOCK,qe as VK_FORMAT_BC1_RGB_UNORM_BLOCK,$e as VK_FORMAT_BC2_SRGB_BLOCK,Ze as VK_FORMAT_BC2_UNORM_BLOCK,en as VK_FORMAT_BC3_SRGB_BLOCK,tn as VK_FORMAT_BC3_UNORM_BLOCK,sn as VK_FORMAT_BC4_SNORM_BLOCK,nn as VK_FORMAT_BC4_UNORM_BLOCK,rn as VK_FORMAT_BC5_SNORM_BLOCK,an as VK_FORMAT_BC5_UNORM_BLOCK,ln as VK_FORMAT_BC6H_SFLOAT_BLOCK,on as VK_FORMAT_BC6H_UFLOAT_BLOCK,Un as VK_FORMAT_BC7_SRGB_BLOCK,fn as VK_FORMAT_BC7_UNORM_BLOCK,Ne as VK_FORMAT_D16_UNORM,je as VK_FORMAT_D16_UNORM_S8_UINT,Re as VK_FORMAT_D24_UNORM_S8_UINT,Ke as VK_FORMAT_D32_SFLOAT,Ye as VK_FORMAT_D32_SFLOAT_S8_UINT,We as VK_FORMAT_E5B9G9R9_UFLOAT_PACK32,dn as VK_FORMAT_EAC_R11G11_SNORM_BLOCK,bn as VK_FORMAT_EAC_R11G11_UNORM_BLOCK,un as VK_FORMAT_EAC_R11_SNORM_BLOCK,xn as VK_FORMAT_EAC_R11_UNORM_BLOCK,pn as VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK,_n as VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK,yn as VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK,gn as VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK,hn as VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK,cn as VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK,Zn as VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16,ii as VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16,fi as VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG,ai as VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG,Ui as VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG,ri as VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG,ci as VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG,oi as VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG,hi as VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG,li as VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG,Qn as VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16,Jn as VK_FORMAT_R10X6G10X6_UNORM_2PACK16,Gn as VK_FORMAT_R10X6_UNORM_PACK16,ni as VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16,ei as VK_FORMAT_R12X4G12X4_UNORM_2PACK16,ti as VK_FORMAT_R12X4_UNORM_PACK16,pe as VK_FORMAT_R16G16B16A16_SFLOAT,_e as VK_FORMAT_R16G16B16A16_SINT,ce as VK_FORMAT_R16G16B16A16_SNORM,he as VK_FORMAT_R16G16B16A16_UINT,Ue as VK_FORMAT_R16G16B16A16_UNORM,fe as VK_FORMAT_R16G16B16_SFLOAT,le as VK_FORMAT_R16G16B16_SINT,re as VK_FORMAT_R16G16B16_SNORM,oe as VK_FORMAT_R16G16B16_UINT,ae as VK_FORMAT_R16G16B16_UNORM,se as VK_FORMAT_R16G16_SFLOAT,ie as VK_FORMAT_R16G16_SINT,ee as VK_FORMAT_R16G16_SNORM,ne as VK_FORMAT_R16G16_UINT,te as VK_FORMAT_R16G16_UNORM,$t as VK_FORMAT_R16_SFLOAT,Zt as VK_FORMAT_R16_SINT,Jt as VK_FORMAT_R16_SNORM,Qt as VK_FORMAT_R16_UINT,Gt as VK_FORMAT_R16_UNORM,Ae as VK_FORMAT_R32G32B32A32_SFLOAT,Le as VK_FORMAT_R32G32B32A32_SINT,Be as VK_FORMAT_R32G32B32A32_UINT,De as VK_FORMAT_R32G32B32_SFLOAT,we as VK_FORMAT_R32G32B32_SINT,me as VK_FORMAT_R32G32B32_UINT,de as VK_FORMAT_R32G32_SFLOAT,be as VK_FORMAT_R32G32_SINT,ue as VK_FORMAT_R32G32_UINT,xe as VK_FORMAT_R32_SFLOAT,ye as VK_FORMAT_R32_SINT,ge as VK_FORMAT_R32_UINT,st as VK_FORMAT_R4G4B4A4_UNORM_PACK16,it as VK_FORMAT_R4G4_UNORM_PACK8,lt as VK_FORMAT_R5G5B5A1_UNORM_PACK16,rt as VK_FORMAT_R5G6B5_UNORM_PACK16,ze as VK_FORMAT_R64G64B64A64_SFLOAT,Ce as VK_FORMAT_R64G64B64A64_SINT,Pe as VK_FORMAT_R64G64B64A64_UINT,Fe as VK_FORMAT_R64G64B64_SFLOAT,Ee as VK_FORMAT_R64G64B64_SINT,Ve as VK_FORMAT_R64G64B64_UINT,Te as VK_FORMAT_R64G64_SFLOAT,Oe as VK_FORMAT_R64G64_SINT,Ie as VK_FORMAT_R64G64_UINT,Se as VK_FORMAT_R64_SFLOAT,ve as VK_FORMAT_R64_SINT,ke as VK_FORMAT_R64_UINT,Et as VK_FORMAT_R8G8B8A8_SINT,Tt as VK_FORMAT_R8G8B8A8_SNORM,Ft as VK_FORMAT_R8G8B8A8_SRGB,Vt as VK_FORMAT_R8G8B8A8_UINT,Ot as VK_FORMAT_R8G8B8A8_UNORM,Bt as VK_FORMAT_R8G8B8_SINT,wt as VK_FORMAT_R8G8B8_SNORM,Lt as VK_FORMAT_R8G8B8_SRGB,Dt as VK_FORMAT_R8G8B8_UINT,mt as VK_FORMAT_R8G8B8_UNORM,bt as VK_FORMAT_R8G8_SINT,xt as VK_FORMAT_R8G8_SNORM,dt as VK_FORMAT_R8G8_SRGB,ut as VK_FORMAT_R8G8_UINT,yt as VK_FORMAT_R8G8_UNORM,pt as VK_FORMAT_R8_SINT,ht as VK_FORMAT_R8_SNORM,gt as VK_FORMAT_R8_SRGB,_t as VK_FORMAT_R8_UINT,ct as VK_FORMAT_R8_UNORM,Xe as VK_FORMAT_S8_UINT,nt as VK_FORMAT_UNDEFINED,He as VK_FORMAT_X8_D24_UNORM_PACK32,Pi as read,Mi as write};\n"],"mappings":";;;;;AAAA,MAAMA,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,CAAC;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,EAAE;EAACC,CAAC,GAAC,GAAG;EAACC,CAAC,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,CAAC;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,EAAE;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,GAAG;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,SAAS;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EAACC,EAAE,GAAC,UAAU;EA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}